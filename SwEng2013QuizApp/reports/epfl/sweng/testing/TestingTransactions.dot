#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-1-g9240c4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// epfl.sweng.testing.TestingTransactions
	c1085 [label=<<table title="epfl.sweng.testing.TestingTransactions" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./TestingTransactions.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TestingTransactions </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run(instr : Instrumentation, t : TestingTransaction) </td></tr>
<tr><td align="left" balign="left"> + check(completedCheck : TestingTransactions.TTChecks) </td></tr>
		</table></td></tr>
		</table>>, URL="./TestingTransactions.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// epfl.sweng.testing.TestingTransactions.TTChecks
	c1086 [label=<<table title="epfl.sweng.testing.TestingTransactions.TTChecks" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TestingTransactions.TTChecks.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> TTChecks </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> NONE </td></tr>
<tr><td align="left" balign="left"> QUESTION_SHOWN </td></tr>
<tr><td align="left" balign="left"> ANSWER_SELECTED </td></tr>
<tr><td align="left" balign="left"> QUIZ_SCORE_SHOWN </td></tr>
<tr><td align="left" balign="left"> AVAILABLE_QUIZZES_SHOWN </td></tr>
<tr><td align="left" balign="left"> MAIN_ACTIVITY_SHOWN </td></tr>
<tr><td align="left" balign="left"> EDIT_QUESTIONS_SHOWN </td></tr>
<tr><td align="left" balign="left"> QUESTION_EDITED </td></tr>
<tr><td align="left" balign="left"> NEW_QUESTION_SUBMITTED </td></tr>
<tr><td align="left" balign="left"> AUTHENTICATION_ACTIVITY_SHOWN </td></tr>
<tr><td align="left" balign="left"> LOGGED_OUT </td></tr>
		</table></td></tr>
		</table>>, URL="./TestingTransactions.TTChecks.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// epfl.sweng.testing.TestingTransaction
	c1087 [label=<<table title="epfl.sweng.testing.TestingTransaction" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TestingTransaction.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TestingTransaction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + initiate() </td></tr>
<tr><td align="left" balign="left"> + verify(completedCheck : TestingTransactions.TTChecks) </td></tr>
		</table></td></tr>
		</table>>, URL="./TestingTransaction.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// epfl.sweng.testing.TestingTransactions DEPEND epfl.sweng.testing.TestingTransaction
	c1085:p -> c1087:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions DEPEND epfl.sweng.testing.TestingTransactions.TTState
	c1085:p -> c1099:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions DEPEND epfl.sweng.testing.TestingTransactions.TTChecks
	c1085:p -> c1086:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions DEPEND android.app.Instrumentation
	c1085:p -> c1100:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions DEPEND java.lang.String
	c1085:p -> c1101:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions.TTChecks DEPEND java.lang.String
	c1086:p -> c1101:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransaction DEPEND epfl.sweng.testing.TestingTransactions.TTChecks
	c1087:p -> c1086:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.testing.TestingTransactions.TTState
	c1099 [label=<<table title="epfl.sweng.testing.TestingTransactions.TTState" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/epfl/sweng/testing/TestingTransactions/TTState.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> TTState </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> IDLE </td></tr>
<tr><td align="left" balign="left"> INITIATED </td></tr>
<tr><td align="left" balign="left"> COMPLETED </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/epfl/sweng/testing/TestingTransactions/TTState.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.String
	c1101 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : Comparator&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + String() </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuffer) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> + length() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr>
<tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : Charset) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : StringBuffer) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : String, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : String, arg3 : int, arg4 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + endsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : CharSequence </td></tr>
<tr><td align="left" balign="left"> + concat(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : String </td></tr>
<tr><td align="left" balign="left"> + matches(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceFirst(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : CharSequence, arg1 : CharSequence) : String </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String, arg1 : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + toLowerCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toLowerCase() : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase() : String </td></tr>
<tr><td align="left" balign="left"> + trim() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : Object) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : float) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + intern() : String </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// android.app.Instrumentation
	c1100 [label=<<table title="android.app.Instrumentation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/android/app/Instrumentation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Instrumentation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + REPORT_KEY_IDENTIFIER : String </td></tr>
<tr><td align="left" balign="left"> + REPORT_KEY_STREAMRESULT : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Instrumentation() </td></tr>
<tr><td align="left" balign="left"> + onCreate(arg0 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + onStart() </td></tr>
<tr><td align="left" balign="left"> + onException(arg0 : Object, arg1 : Throwable) : boolean </td></tr>
<tr><td align="left" balign="left"> + sendStatus(arg0 : int, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + finish(arg0 : int, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + setAutomaticPerformanceSnapshots() </td></tr>
<tr><td align="left" balign="left"> + startPerformanceSnapshot() </td></tr>
<tr><td align="left" balign="left"> + endPerformanceSnapshot() </td></tr>
<tr><td align="left" balign="left"> + onDestroy() </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context </td></tr>
<tr><td align="left" balign="left"> + getComponentName() : ComponentName </td></tr>
<tr><td align="left" balign="left"> + getTargetContext() : Context </td></tr>
<tr><td align="left" balign="left"> + isProfiling() : boolean </td></tr>
<tr><td align="left" balign="left"> + startProfiling() </td></tr>
<tr><td align="left" balign="left"> + stopProfiling() </td></tr>
<tr><td align="left" balign="left"> + setInTouchMode(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + waitForIdle(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> + waitForIdleSync() </td></tr>
<tr><td align="left" balign="left"> + runOnMainSync(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> + startActivitySync(arg0 : Intent) : Activity </td></tr>
<tr><td align="left" balign="left"> + addMonitor(arg0 : Instrumentation.ActivityMonitor) </td></tr>
<tr><td align="left" balign="left"> + addMonitor(arg0 : IntentFilter, arg1 : Instrumentation.ActivityResult, arg2 : boolean) : Instrumentation.ActivityMonitor </td></tr>
<tr><td align="left" balign="left"> + addMonitor(arg0 : String, arg1 : Instrumentation.ActivityResult, arg2 : boolean) : Instrumentation.ActivityMonitor </td></tr>
<tr><td align="left" balign="left"> + checkMonitorHit(arg0 : Instrumentation.ActivityMonitor, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + waitForMonitor(arg0 : Instrumentation.ActivityMonitor) : Activity </td></tr>
<tr><td align="left" balign="left"> + waitForMonitorWithTimeout(arg0 : Instrumentation.ActivityMonitor, arg1 : long) : Activity </td></tr>
<tr><td align="left" balign="left"> + removeMonitor(arg0 : Instrumentation.ActivityMonitor) </td></tr>
<tr><td align="left" balign="left"> + invokeMenuActionSync(arg0 : Activity, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + invokeContextMenuAction(arg0 : Activity, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + sendStringSync(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + sendKeySync(arg0 : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + sendKeyDownUpSync(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + sendCharacterSync(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + sendPointerSync(arg0 : MotionEvent) </td></tr>
<tr><td align="left" balign="left"> + sendTrackballEventSync(arg0 : MotionEvent) </td></tr>
<tr><td align="left" balign="left"> + newApplication(arg0 : ClassLoader, arg1 : String, arg2 : Context) : Application </td></tr>
<tr><td align="left" balign="left"> + newApplication(arg0 : Class&lt;?&gt;, arg1 : Context) : Application </td></tr>
<tr><td align="left" balign="left"> + callApplicationOnCreate(arg0 : Application) </td></tr>
<tr><td align="left" balign="left"> + newActivity(arg0 : Class&lt;?&gt;, arg1 : Context, arg2 : IBinder, arg3 : Application, arg4 : Intent, arg5 : ActivityInfo, arg6 : CharSequence, arg7 : Activity, arg8 : String, arg9 : Object) : Activity </td></tr>
<tr><td align="left" balign="left"> + newActivity(arg0 : ClassLoader, arg1 : String, arg2 : Intent) : Activity </td></tr>
<tr><td align="left" balign="left"> + callActivityOnCreate(arg0 : Activity, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnDestroy(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnRestoreInstanceState(arg0 : Activity, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnPostCreate(arg0 : Activity, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnNewIntent(arg0 : Activity, arg1 : Intent) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnStart(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnRestart(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnResume(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnStop(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnSaveInstanceState(arg0 : Activity, arg1 : Bundle) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnPause(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + callActivityOnUserLeaving(arg0 : Activity) </td></tr>
<tr><td align="left" balign="left"> + startAllocCounting() </td></tr>
<tr><td align="left" balign="left"> + stopAllocCounting() </td></tr>
<tr><td align="left" balign="left"> + getAllocCounts() : Bundle </td></tr>
<tr><td align="left" balign="left"> + getBinderCounts() : Bundle </td></tr>
<tr><td align="left" balign="left"> + getUiAutomation() : UiAutomation </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/android/app/Instrumentation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

